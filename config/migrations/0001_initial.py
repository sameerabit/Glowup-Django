# Generated by Django 2.1.3 on 2019-02-11 18:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customer_id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_name', models.CharField(max_length=100, verbose_name='Customer Name')),
                ('contact_person', models.CharField(max_length=100, verbose_name='Contact Person')),
                ('address_1', models.CharField(max_length=100, verbose_name='Address Line 1')),
                ('address_2', models.CharField(max_length=100, verbose_name='Address Line 2')),
                ('city', models.CharField(max_length=50, verbose_name='City')),
                ('postal_code', models.CharField(max_length=20, verbose_name='Postal Code')),
                ('country', models.CharField(max_length=25, verbose_name='Country')),
                ('currency', models.CharField(max_length=10, verbose_name='Currency')),
                ('contact_land', models.CharField(max_length=15, verbose_name='Telephone')),
                ('contact_mobile', models.CharField(max_length=15, verbose_name='Mobile')),
                ('contact_email', models.EmailField(max_length=100, verbose_name='Email')),
                ('admin_email', models.EmailField(max_length=100, verbose_name='Admin Email')),
                ('is_active', models.BooleanField(default=True, verbose_name='Status')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Registered on')),
                ('create', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Registered by')),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
                'db_table': 'config_customer',
                'permissions': (('add_customer', 'Can Add Customer'), ('change_customer', 'Can Change Customer'), ('view_customers', 'Can View Customers')),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='CustomerGroup',
            fields=[
                ('group_id', models.AutoField(primary_key=True, serialize=False)),
                ('group_code', models.CharField(max_length=25, unique=True, verbose_name='Group Code')),
                ('group_name', models.CharField(max_length=50, verbose_name='Group Name')),
            ],
            options={
                'verbose_name': 'Customer Group',
                'verbose_name_plural': 'Customer Groups',
                'db_table': 'config_customer_group',
                'permissions': (('add_customer_group', 'Can Add Customer Group'), ('change_customer_group', 'Can Change Customer Group'), ('view_customer_groups', 'Can View Customer Groups')),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='CustomerLocation',
            fields=[
                ('location_id', models.AutoField(primary_key=True, serialize=False)),
                ('location_name', models.CharField(max_length=50, verbose_name='Location')),
                ('location_code', models.CharField(max_length=3, verbose_name='Location Code')),
                ('address_1', models.CharField(max_length=100, verbose_name='Address Line 1')),
                ('address_2', models.CharField(max_length=100, verbose_name='Address Line 2')),
                ('city', models.CharField(max_length=25, verbose_name='City')),
                ('contact_mobile', models.CharField(max_length=15, verbose_name='Mobile')),
                ('contact_land', models.CharField(max_length=15, verbose_name='Telephone')),
                ('is_active', models.BooleanField(default=True, verbose_name='Status')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Registered on')),
                ('create', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Registered by')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='config.Customer')),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Customer Locations',
                'db_table': 'config_customer_location',
                'permissions': (('add_customer_location', 'Can Add Customer Location'), ('change_customer_location', 'Can Change Customer Location'), ('view_customer_locations', 'Can View Customer Locations')),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='CustomerPayment',
            fields=[
                ('payment_id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=18, verbose_name='Amount')),
                ('currency', models.CharField(max_length=10, verbose_name='Currency')),
                ('due_date', models.DateField(verbose_name='Due Date')),
                ('expiry_date', models.DateField(verbose_name='Expiry Date')),
                ('payment_method', models.CharField(max_length=10, verbose_name='Payment Method')),
                ('payment_ref', models.CharField(max_length=25, verbose_name='Reference No')),
                ('payment_done', models.BooleanField(default=True, verbose_name='Payment OK')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Collected on')),
                ('create', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Collected by')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='config.Customer')),
            ],
            options={
                'verbose_name_plural': 'Customer Payments',
                'db_table': 'config_customer_payment',
                'permissions': (('add_customer_payment', 'Can Add Customer Payment'), ('change_customer_payment', 'Can Change Customer Payment'), ('view_customer_payments', 'Can View Customer Payments')),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='CustomerUserGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_eligible', models.BooleanField(default=False, help_text='Can Customer assign this Type to a Employee?', verbose_name='Eligible')),
                ('group', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='auth.Group')),
            ],
            options={
                'verbose_name_plural': 'User Group Eligibility of Customers',
                'db_table': 'config_customer_user_group',
                'permissions': (('add_customer_user_group', 'Can Add User Group Eligibility of Customer'), ('change_customer_user_group', 'Can Change User Group Eligibility of Customer'), ('view_customer_user_groups', 'Can View User Group Eligibility of Customers')),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('type_id', models.AutoField(primary_key=True, serialize=False)),
                ('type_description', models.CharField(max_length=25, unique=True, verbose_name='Type Description')),
                ('type_category', models.IntegerField(choices=[(1, 'Status'), (2, 'Booking Type'), (3, 'Personal Style'), (4, 'Professional Style'), (5, 'Hair Goals'), (6, 'Commitment to Salon Visits'), (7, 'Styling Time'), (8, 'Versality'), (9, 'How you Style'), (10, 'Styling Comfort Level'), (11, 'Abudance'), (12, 'Diameter'), (13, 'Hair Formation'), (14, 'Condition'), (15, 'Type of Distress'), (16, 'Skin Tone'), (17, 'Previous Chemical Service')], verbose_name='Type Categorization')),
                ('is_active', models.BooleanField(default=True, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'Type',
                'verbose_name_plural': 'Type',
                'db_table': 'config_type',
                'permissions': (('add_config_type', 'Can Add Config Type'), ('change_config_type', 'Can Change Config Type'), ('view_config_types', 'Can View Config Types')),
                'default_permissions': (),
            },
        ),
        migrations.AddField(
            model_name='customer',
            name='customer_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='config.CustomerGroup'),
        ),
    ]
