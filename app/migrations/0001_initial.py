# Generated by Django 2.1.3 on 2019-02-11 18:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('booking_id', models.AutoField(primary_key=True, serialize=False)),
                ('token', models.CharField(blank=True, max_length=10, null=True, verbose_name='Token No')),
                ('schedule_date', models.DateField(blank=True, null=True, verbose_name='Scheduled Date')),
                ('schedule_time', models.CharField(blank=True, max_length=25, null=True, verbose_name='Scheduled Time')),
                ('client_name', models.CharField(max_length=100, verbose_name='Client Name')),
                ('phone_no', models.CharField(blank=True, max_length=15, null=True, verbose_name='Phone No')),
                ('client_remark', models.TextField(blank=True, max_length=250, null=True, verbose_name='Comment')),
                ('schedule_remark', models.TextField(max_length=100, verbose_name='Schedule Remark')),
                ('schedule_start_datetime', models.DateTimeField(null=True, verbose_name='Session Started on')),
                ('schedule_end_datetime', models.DateTimeField(null=True, verbose_name='Session Ended on')),
                ('is_active', models.BooleanField(default=True, verbose_name='Status')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
            ],
            options={
                'verbose_name': 'Booking',
                'verbose_name_plural': 'Bookings',
                'db_table': 'app_booking',
                'permissions': (('add_booking', 'Can Add Booking'), ('change_booking', 'Can Change Booking'), ('view_bookings', 'Can View Bookings')),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('client_id', models.AutoField(primary_key=True, serialize=False)),
                ('registration_no', models.CharField(help_text='Enter something unique to client like NIC, Passport No... etc', max_length=100, verbose_name='Registration No')),
                ('first_name', models.CharField(max_length=100, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Last Name')),
                ('postal_code', models.CharField(max_length=20, verbose_name='Postal Code')),
                ('email', models.CharField(blank=True, max_length=100, null=True, verbose_name='Email')),
                ('phone_no', models.CharField(blank=True, max_length=15, null=True, verbose_name='Phone No')),
                ('last_visit_date', models.DateField(null=True, verbose_name='Last Visit Date')),
                ('is_active', models.BooleanField(default=True, verbose_name='Status')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Registered on')),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
                'db_table': 'app_client',
                'permissions': (('add_client', 'Can Add Client'), ('change_client', 'Can Change Client'), ('view_clients', 'Can View Clients')),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='ClientSession',
            fields=[
                ('client_session_id', models.AutoField(primary_key=True, serialize=False)),
                ('personal_interests', models.CharField(blank=True, max_length=100, verbose_name='Personal Interests')),
                ('preferences', models.CharField(blank=True, max_length=100, verbose_name='What do you like/dislike about your hair?')),
                ('products', models.CharField(blank=True, max_length=100, verbose_name='What products are you currently using?')),
            ],
            options={
                'verbose_name_plural': 'Client Session',
                'db_table': 'app_client_session',
                'permissions': (('add_client_session', 'Can Add Client Session'), ('change_client_session', 'Can Change Client Session'), ('view_client_session', 'Can View Client Sessions')),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='CustomerUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_salon_admin', models.BooleanField(default=False, verbose_name='Salon Admin')),
            ],
            options={
                'verbose_name_plural': 'Users of Customers',
                'db_table': 'app_customer_user',
                'permissions': (('add_customer_user', 'Can Add Users of Customers'), ('change_customer_user', 'Can Change Users of Customers'), ('view_customer_users', 'Can View Users of Customers')),
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('employee_id', models.AutoField(primary_key=True, serialize=False)),
                ('employee_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='Employee Code')),
                ('first_name', models.CharField(max_length=100, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=100, verbose_name='Last Name')),
                ('passcode', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True, verbose_name='Status')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Registered on')),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employees',
                'db_table': 'app_employee',
                'permissions': (('add_employee', 'Can Add Employee'), ('change_employee', 'Can Change Employee'), ('view_employees', 'Can View Employees')),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='EmployeeService',
            fields=[
                ('employee_services_id', models.AutoField(primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='Status')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Assigned on')),
            ],
            options={
                'verbose_name_plural': 'Services of Employees',
                'db_table': 'app_employee_service',
                'permissions': (('add_employee_service', 'Can Add Services of Employees'), ('change_employee_service', 'Can Change Services of Employees'), ('view_employee_services', 'Can View Services of Employees')),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='EmployeeUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name_plural': 'Users of Employees',
                'db_table': 'app_employee_user',
                'permissions': (('add_employee_user', 'Can Add Users of Employees'), ('change_employee_user', 'Can Change Users of Employees'), ('view_employee_users', 'Can View Users of Employees')),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('service_id', models.AutoField(primary_key=True, serialize=False)),
                ('service_name', models.CharField(max_length=25, verbose_name='Service Name')),
                ('price', models.DecimalField(decimal_places=3, max_digits=18, verbose_name='Price')),
                ('is_active', models.BooleanField(default=True, verbose_name='Status')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Created on')),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'db_table': 'app_service',
                'permissions': (('add_service', 'Can Add Service'), ('change_service', 'Can Change Service'), ('view_services', 'Can View Services')),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='ServiceBooking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name_plural': 'Services of Bookings',
                'db_table': 'app_service_booking',
                'permissions': (('add_service_booking', 'Can Add Services of Bookings'), ('change_service_booking', 'Can Change Services of Bookings'), ('view_service_bookings', 'Can View Services of Bookings')),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('service_category_id', models.AutoField(primary_key=True, serialize=False)),
                ('service_category_name', models.CharField(max_length=25, unique=True, verbose_name='Service Category Name')),
                ('is_active', models.BooleanField(default=True, verbose_name='Status')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Created on')),
                ('create', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
            ],
            options={
                'verbose_name': 'Service Category',
                'verbose_name_plural': 'Service Categories',
                'db_table': 'app_service_category',
                'permissions': (('add_service_category', 'Can Add Service Category'), ('change_service_category', 'Can Change Service Category'), ('view_service_categories', 'Can View Service Categories')),
                'default_permissions': (),
            },
        ),
    ]
